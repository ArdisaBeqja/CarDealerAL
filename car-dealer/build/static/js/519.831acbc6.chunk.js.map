{"version":3,"file":"static/js/519.831acbc6.chunk.js","mappings":"sIAkBA,QAPA,SAAyBA,GACvB,MAAMC,GAAMC,EAAAA,EAAAA,QAAOF,GAInB,OAHAG,EAAAA,EAAAA,YAAU,KACRF,EAAIG,QAAUJ,CAAK,GAClB,CAACA,IACGC,CACT,C,0DCfe,SAASI,EAAiBC,GACvC,MAAML,GAAMM,EAAAA,EAAAA,GAAgBD,GAC5B,OAAOE,EAAAA,EAAAA,cAAY,WACjB,OAAOP,EAAIG,SAAWH,EAAIG,WAAQK,UACpC,GAAG,CAACR,GACN,C,gDCNA,MAAMS,EAAkC,qBAAXC,EAAAA,GAE7BA,EAAAA,EAAOC,WAEsB,gBAA7BD,EAAAA,EAAOC,UAAUC,QAWjB,EAVkC,qBAAbC,UAUGJ,EAAgBK,EAAAA,gBAAkBZ,EAAAA,S,gDCM3C,SAASa,IACtB,MAAMC,GAAUf,EAAAA,EAAAA,SAAO,GACjBgB,GAAYhB,EAAAA,EAAAA,SAAO,IAAMe,EAAQb,UAOvC,OANAD,EAAAA,EAAAA,YAAU,KACRc,EAAQb,SAAU,EACX,KACLa,EAAQb,SAAU,CAAK,IAExB,IACIc,EAAUd,OACnB,C,gDCbe,SAASe,EAAYnB,GAClC,MAAMC,GAAMC,EAAAA,EAAAA,QAAO,MAInB,OAHAC,EAAAA,EAAAA,YAAU,KACRF,EAAIG,QAAUJ,CAAK,IAEdC,EAAIG,OACb,C,gDChBe,SAASgB,EAAed,GACrC,MAAMe,ECFO,SAAuBrB,GACpC,MAAMsB,GAAWpB,EAAAA,EAAAA,QAAOF,GAExB,OADAsB,EAASlB,QAAUJ,EACZsB,CACT,CDFoBC,CAAcjB,IAChCH,EAAAA,EAAAA,YAAU,IAAM,IAAMkB,EAAUjB,WAAW,GAC7C,C,oEEZA,MAAMoB,EAAY,CAAC,KAAM,YAOlB,SAASC,EAAcC,GAU3B,IAV4B,QAC7BC,EAAO,SACPC,EAAQ,KACRC,EAAI,OACJC,EAAM,IACNC,EAAG,KACHC,EAAI,QACJC,EAAO,SACPC,EAAW,EAAC,KACZC,GACDT,EACMC,IAEDA,EADU,MAARE,GAA0B,MAAVC,GAAyB,MAAPC,EAC1B,IAEA,UAGd,MAAMK,EAAO,CACXT,WAEF,GAAgB,WAAZA,EACF,MAAO,CAAC,CACNQ,KAAMA,GAAQ,SACdP,YACCQ,GAEL,MAAMC,EAAcC,KACdV,GAAwB,MAAZD,GA/Bb,SAAuBE,GAC5B,OAAQA,GAAwB,MAAhBA,EAAKU,MACvB,CA6BuCC,CAAcX,KAC/CS,EAAMG,iBAEJb,EACFU,EAAMI,kBAGG,MAAXT,GAA2BA,EAAQK,EAAM,EAe3C,MAPgB,MAAZX,IAEFE,IAASA,EAAO,KACZD,IACFC,OAAOc,IAGJ,CAAC,CACNX,KAAc,MAARA,EAAeA,EAAO,SAG5BJ,cAAUe,EACVT,SAAUN,OAAWe,EAAYT,EACjCL,OACAC,OAAoB,MAAZH,EAAkBG,OAASa,EACnC,gBAAkBf,QAAWe,EAC7BZ,IAAiB,MAAZJ,EAAkBI,OAAMY,EAC7BV,QAASI,EACTO,UAxBoBN,IACF,MAAdA,EAAMO,MACRP,EAAMG,iBACNJ,EAAYC,GACd,GAqBCF,EACL,CACA,MAAMU,EAAsBC,EAAAA,YAAiB,CAACC,EAAM/C,KAClD,IACIgD,GAAIC,EAAM,SACVtB,GACEoB,EACJG,EA3EJ,SAAuCC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAAG,IAA2DP,EAAKS,EAA5DxB,EAAS,CAAC,EAAOyB,EAAaC,OAAOC,KAAKL,GAAqB,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IAAOT,EAAMU,EAAWD,GAAQD,EAASM,QAAQd,IAAQ,IAAaf,EAAOe,GAAOO,EAAOP,IAAQ,OAAOf,CAAQ,CA2EtS8B,CAA8BZ,EAAMxB,GAC9C,MAAOqC,GACLlC,QAASmC,IACNrC,EAAe+B,OAAOO,OAAO,CAChCpC,QAASuB,EACTtB,YACCuB,IACH,OAAoBa,EAAAA,EAAAA,KAAKF,EAAWN,OAAOO,OAAO,CAAC,EAAGZ,EAAOU,EAAa,CACxE5D,IAAKA,IACJ,IAEL6C,EAAOmB,YAAc,SACrB,S,2CCxFO,MAAMC,EAAmB,cACnBC,EAAkB,OACxB,SAASC,EAASC,GACvB,MAAO,GAAPC,OAAUJ,GAAgBI,OAAGD,EAC/B,CACO,SAASE,EAASF,GACvB,MAAO,GAAPC,OAAUH,GAAeG,OAAGD,EAC9B,C,gDCAe,SAASG,EAAcC,QACxB,IAARA,IACFA,GAAMC,EAAAA,EAAAA,MAKR,IACE,IAAIC,EAASF,EAAID,cAGjB,OAAKG,GAAWA,EAAOC,SAChBD,EADiC,IAE1C,CAAE,MAAOE,GAEP,OAAOJ,EAAIK,IACb,CACF,CChBe,SAASC,EAASC,EAASC,GAGxC,OAAID,EAAQD,SAAiBC,EAAQD,SAASE,GAC1CD,EAAQE,wBAAgCF,IAAYC,MAAmD,GAAxCD,EAAQE,wBAAwBD,SAAnG,CACF,C,6FCXA,MAAME,GAAuBC,EAAAA,EAAAA,eAAcC,EAAAA,EAAYC,YAAS3C,GAClCwC,EAAQI,SAQvB,SAASC,IACtB,OAAOC,EAAAA,EAAAA,YAAWN,EACpB,CCTO,MAAMO,EAAsBA,CAACzF,EAAKa,IAClCuE,EAAAA,EACM,MAAPpF,GAAqBa,IAAY4D,EAAAA,EAAAA,MAAiBI,MACnC,oBAAR7E,IAAoBA,EAAMA,KACjCA,GAAO,YAAaA,IAAKA,EAAMA,EAAIG,SACnCH,IAAQ,aAAcA,GAAOA,EAAI0F,uBAA+B1F,EAC7D,MALgB,K,kCCLzB,MAAMuB,EAAY,CAAC,UAAW,aAAc,YAAa,SAAU,YAAa,WAAY,iBAAkB,YAW/F,SAASoE,EAAsB5C,GAC5C,IAAI,QACA6C,EAAO,WACPC,EAAU,UACVC,EAAS,OACTC,EAAM,UACNC,EAAS,SACTC,EAAQ,eACRC,EAAc,SACdC,GACEpD,EACJG,EArBJ,SAAuCC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAAG,IAA2DP,EAAKS,EAA5DxB,EAAS,CAAC,EAAOyB,EAAaC,OAAOC,KAAKL,GAAqB,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IAAOT,EAAMU,EAAWD,GAAQD,EAASM,QAAQd,IAAQ,IAAaf,EAAOe,GAAOO,EAAOP,IAAQ,OAAOf,CAAQ,CAqBtS8B,CAA8BZ,EAAMxB,GAC9C,MAAM6E,GAAUnG,EAAAA,EAAAA,QAAO,MACjBoG,GAAYC,EAAAA,EAAAA,GAAcF,EAA6B,oBAAbD,EAA0B,KAAOA,EAASnG,KACpFuG,EAAYC,GAAYC,IACxBD,GAAYJ,EAAQjG,SACtBqG,EAASJ,EAAQjG,QAASsG,EAC5B,EAIIC,GAAcnG,EAAAA,EAAAA,aAAYgG,EAAUX,GAAU,CAACA,IAC/Ce,GAAiBpG,EAAAA,EAAAA,aAAYgG,EAAUV,GAAa,CAACA,IACrDe,GAAgBrG,EAAAA,EAAAA,aAAYgG,EAAUT,GAAY,CAACA,IACnDe,GAAatG,EAAAA,EAAAA,aAAYgG,EAAUR,GAAS,CAACA,IAC7Ce,GAAgBvG,EAAAA,EAAAA,aAAYgG,EAAUP,GAAY,CAACA,IACnDe,GAAexG,EAAAA,EAAAA,aAAYgG,EAAUN,GAAW,CAACA,IACjDe,GAAuBzG,EAAAA,EAAAA,aAAYgG,EAAUL,GAAiB,CAACA,IAGrE,OAAO3C,OAAOO,OAAO,CAAC,EAAGZ,EAAO,CAC9BkD,WACCR,GAAW,CACZA,QAASc,GACRb,GAAc,CACfA,WAAYc,GACXb,GAAa,CACdA,UAAWc,GACVb,GAAU,CACXA,OAAQc,GACPb,GAAa,CACdA,UAAWc,GACVb,GAAY,CACbA,SAAUc,GACTb,GAAkB,CACnBA,eAAgBc,GACf,CACDb,SAA8B,oBAAbA,EAA0B,CAACc,EAAQC,IAEpDf,EAASc,EAAQ1D,OAAOO,OAAO,CAAC,EAAGoD,EAAY,CAC7ClH,IAAKqG,MACYc,EAAAA,EAAAA,cAAahB,EAAU,CACxCnG,IAAKqG,KAGX,C,cClEA,MAAM9E,EAAY,CAAC,aAMnB,MAUA,EAVmCuB,EAAAA,YAAiB,CAACC,EAAM/C,KACzD,IACIoH,UAAWvD,GACTd,EAEN,MAAMsE,EAAkB1B,EAV1B,SAAuCxC,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAAG,IAA2DP,EAAKS,EAA5DxB,EAAS,CAAC,EAAOyB,EAAaC,OAAOC,KAAKL,GAAqB,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IAAOT,EAAMU,EAAWD,GAAQD,EAASM,QAAQd,IAAQ,IAAaf,EAAOe,GAAOO,EAAOP,IAAQ,OAAOf,CAAQ,CAStS8B,CAA8BZ,EAAMxB,IAE9C,OAAoBwC,EAAAA,EAAAA,KAAKF,EAAWN,OAAOO,OAAO,CAChD9D,IAAKA,GACJqH,GAAiB,IC8BP,SAASC,EAAoB7F,GAMzC,IAN0C,SAC3C0E,EACAoB,GAAIC,EAAM,SACVvB,EAAQ,UACRH,EAAS,WACT2B,GACDhG,EACC,MAAOiG,EAAQC,IAAaC,EAAAA,EAAAA,WAAUJ,GAGlCA,GAAUE,GACZC,GAAU,GAEZ,MAAM3H,EAlDD,SAAsB+C,GAG1B,IAFDwE,GAAIC,EAAM,aACVK,GACD9E,EACC,MAAM/C,GAAMC,EAAAA,EAAAA,QAAO,MACb6H,GAAe7H,EAAAA,EAAAA,SAAO,GACtB8H,GAAmB3H,EAAAA,EAAAA,GAAiByH,GAuB1C,OAtBAG,EAAAA,EAAAA,IAAoB,KAClB,IAAKhI,EAAIG,QACP,OAEF,IAAI8H,GAAQ,EAOZ,OANAF,EAAiB,CACfR,GAAIC,EACJU,QAASlI,EAAIG,QACbgI,QAASL,EAAa3H,QACtBiI,QAASA,IAAMH,IAEV,KACLA,GAAQ,CAAI,CACb,GACA,CAACT,EAAQO,KACZC,EAAAA,EAAAA,IAAoB,KAClBF,EAAa3H,SAAU,EAEhB,KACL2H,EAAa3H,SAAU,CAAI,IAE5B,IACIH,CACT,CAoBcqI,CAAc,CACxBd,KAAMC,EACNK,aAAcS,IAUZC,QAAQC,QAAQf,EAAWa,IAAUG,MATpBC,KACXJ,EAAQF,YACRE,EAAQf,GACG,MAAbzB,GAA6BA,EAAUwC,EAAQJ,QAASI,EAAQH,UAEhER,GAAU,GACE,MAAZ1B,GAA4BA,EAASqC,EAAQJ,UAC/C,IAEkDS,IAElD,MADKL,EAAQf,IAAII,GAAU,GACrBgB,CAAK,GACX,IAGAC,GAActC,EAAAA,EAAAA,GAActG,EAAKmG,EAASnG,KAChD,OAAO0H,IAAWF,EAAS,MAAoBL,EAAAA,EAAAA,cAAahB,EAAU,CACpEnG,IAAK4I,GAET,CACO,SAASC,EAAiBzB,EAAW0B,EAAe5F,GACzD,OAAIkE,GACkBrD,EAAAA,EAAAA,KAAKgF,EAAexF,OAAOO,OAAO,CAAC,EAAGZ,EAAO,CAC/DkE,UAAWA,KAGX0B,GACkB/E,EAAAA,EAAAA,KAAKuD,EAAsB/D,OAAOO,OAAO,CAAC,EAAGZ,EAAO,CACtEuE,WAAYqB,MAGI/E,EAAAA,EAAAA,KAAKiF,EAAAA,EAAgBzF,OAAOO,OAAO,CAAC,EAAGZ,GAC7D,CC5FA,MAAM3B,EAAY,CAAC,OAAQ,OAAQ,YAAa,QAAS,WAAY,WAAY,WAAY,kBAAmB,kBAAmB,aAAc,gBAAiB,qBAAsB,wBAAyB,YAAa,eAAgB,eAAgB,sBAAuB,eAAgB,iBAAkB,UAAW,YAAa,SAAU,SAAU,SAAU,WAAY,YAAa,UAAW,aAAc,aAuB/Z,IAAI0H,EAOJ,SAASC,EAAgBC,GACvB,MAAM9D,EAASE,IACT6D,EAAeD,GARvB,SAAoB9D,GAIlB,OAHK4D,IAASA,EAAU,IAAII,EAAAA,EAAa,CACvC5E,cAAyB,MAAVY,OAAiB,EAASA,EAAOxE,YAE3CoI,CACT,CAGmCK,CAAWjE,GACtCkE,GAAQtJ,EAAAA,EAAAA,QAAO,CACnBuJ,OAAQ,KACRC,SAAU,OAEZ,OAAOlG,OAAOO,OAAOyF,EAAMpJ,QAAS,CAClCuJ,IAAKA,IAAMN,EAAaM,IAAIH,EAAMpJ,SAClCwJ,OAAQA,IAAMP,EAAaO,OAAOJ,EAAMpJ,SACxCyJ,WAAYA,IAAMR,EAAaQ,WAAWL,EAAMpJ,SAChD0J,cAActJ,EAAAA,EAAAA,cAAYP,IACxBuJ,EAAMpJ,QAAQqJ,OAASxJ,CAAG,GACzB,IACH8J,gBAAgBvJ,EAAAA,EAAAA,cAAYP,IAC1BuJ,EAAMpJ,QAAQsJ,SAAWzJ,CAAG,GAC3B,KAEP,CACA,MAAM+J,GAAqBC,EAAAA,EAAAA,aAAW,CAACjH,EAAM/C,KAC3C,IAAI,KACAiK,GAAO,EAAK,KACZlI,EAAO,SAAQ,UACfmI,EAAS,MACTC,EAAK,SACLhE,EAAQ,SACRsD,GAAW,EAAI,SACfW,GAAW,EAAI,gBACfC,EAAe,gBACfC,EAAe,WACf7C,EAAU,cACVqB,EAAa,mBACbyB,EAAkB,sBAClBC,EAAqB,UACrBC,GAAY,EAAI,aAChBC,GAAe,EAAI,aACnBC,GAAe,EAAI,oBACnBC,EAAmB,aACnBC,EAAY,eACZC,EAAiB5H,KAAsBa,EAAAA,EAAAA,KAAK,MAAOR,OAAOO,OAAO,CAAC,EAAGZ,KACrE+F,QAAS8B,EACTC,UAAWC,EAAY,OACvBC,EAAM,OACNC,EAASA,SAAQ,OACjBpF,EAAM,SACNE,EAAQ,UACRD,EAAS,QACTJ,EAAO,WACPC,EAAU,UACVC,GACE/C,EACJqI,EAhFJ,SAAuCjI,EAAQC,GAAY,GAAc,MAAVD,EAAgB,MAAO,CAAC,EAAG,IAA2DP,EAAKS,EAA5DxB,EAAS,CAAC,EAAOyB,EAAaC,OAAOC,KAAKL,GAAqB,IAAKE,EAAI,EAAGA,EAAIC,EAAWG,OAAQJ,IAAOT,EAAMU,EAAWD,GAAQD,EAASM,QAAQd,IAAQ,IAAaf,EAAOe,GAAOO,EAAOP,IAAQ,OAAOf,CAAQ,CAgFvS8B,CAA8BZ,EAAMxB,GAC7C,MAAM8J,EAAc9F,IACdyF,EJvEO,SAA0BhL,EAAKsL,GAC5C,MAAMjG,EAASE,KACRgG,EAAaC,IAAU5D,EAAAA,EAAAA,WAAS,IAAMnC,EAAoBzF,EAAe,MAAVqF,OAAiB,EAASA,EAAOxE,YACvG,IAAK0K,EAAa,CAChB,MAAME,EAAWhG,EAAoBzF,GACjCyL,GAAUD,EAAOC,EACvB,CAYA,OAXAvL,EAAAA,EAAAA,YAAU,KACJoL,GAAcC,GAChBD,EAAWC,EACb,GACC,CAACD,EAAYC,KAChBrL,EAAAA,EAAAA,YAAU,KACR,MAAMwL,EAAUjG,EAAoBzF,GAChC0L,IAAYH,GACdC,EAAOE,EACT,GACC,CAAC1L,EAAKuL,IACFA,CACT,CIoDoBI,CAAiBV,GAC7B1B,EAAQL,EAAgB6B,GACxB9J,GAAYF,EAAAA,EAAAA,KACZ6K,GAAW1K,EAAAA,EAAAA,GAAY+I,IACtBvC,EAAQC,KAAaC,EAAAA,EAAAA,WAAUqC,GAChC4B,IAAe5L,EAAAA,EAAAA,QAAO,OAC5B6L,EAAAA,EAAAA,qBAAoB9L,GAAK,IAAMuJ,GAAO,CAACA,IACnCnE,EAAAA,IAAcwG,GAAY3B,IAC5B4B,GAAa1L,QAAUoE,EAA6B,MAAf8G,OAAsB,EAASA,EAAYxK,WAI9EoJ,GAAQvC,GACVC,IAAU,GAEZ,MAAMoE,IAAa3L,EAAAA,EAAAA,IAAiB,KAalC,GAZAmJ,EAAMG,MACNsC,GAAyB7L,SAAU8L,EAAAA,EAAAA,GAAOpL,SAAU,UAAWqL,IAC/DC,GAAuBhM,SAAU8L,EAAAA,EAAAA,GAAOpL,SAAU,SAGlD,IAAMuL,WAAWC,MAAqB,GAClCnB,GACFA,IAKET,EAAW,CACb,IAAI6B,EAAuBC,EAC3B,MAAMC,EAAuBjI,EAAyH,OAA1G+H,EAA0D,OAAjCC,EAAgBhD,EAAMC,aAAkB,EAAS+C,EAAc9H,eAAyB6H,EAAuC,MAAfjB,OAAsB,EAASA,EAAYxK,UAC5N0I,EAAMC,QAAUgD,IAAyB1H,EAASyE,EAAMC,OAAQgD,KAClEX,GAAa1L,QAAUqM,EACvBjD,EAAMC,OAAOiD,QAEjB,KAEIC,IAAatM,EAAAA,EAAAA,IAAiB,KAKhC,IAAIuM,GAJNpD,EAAMI,SAC8B,MAApCqC,GAAyB7L,SAA2B6L,GAAyB7L,UAC3C,MAAlCgM,GAAuBhM,SAA2BgM,GAAuBhM,UACrEwK,KAGgD,OAAjDgC,EAAwBd,GAAa1L,UAA2D,MAA/BwM,EAAsBF,OAAyBE,EAAsBF,MAAM7B,GAC7IiB,GAAa1L,QAAU,KACzB,KAOFD,EAAAA,EAAAA,YAAU,KACH+J,GAASe,GACde,IAAY,GACX,CAAC9B,EAAMe,EAAqCe,MAK/C7L,EAAAA,EAAAA,YAAU,KACHwH,GACLgF,IAAY,GACX,CAAChF,EAAQgF,MACZvL,EAAAA,EAAAA,IAAe,KACbuL,IAAY,IAKd,MAAML,IAAqBjM,EAAAA,EAAAA,IAAiB,KAC1C,IAAKsK,IAAiBzJ,MAAgBsI,EAAMK,aAC1C,OAEF,MAAM4C,EAAuBjI,EAA6B,MAAf8G,OAAsB,EAASA,EAAYxK,UAClF0I,EAAMC,QAAUgD,IAAyB1H,EAASyE,EAAMC,OAAQgD,IAClEjD,EAAMC,OAAOiD,OACf,IAEIG,IAAsBxM,EAAAA,EAAAA,IAAiBwE,IACvCA,EAAE/C,SAAW+C,EAAEiI,gBAGA,MAAnBxC,GAAmCA,EAAgBzF,IAClC,IAAb6E,GACF0B,IACF,IAEIe,IAAwB9L,EAAAA,EAAAA,IAAiBwE,IACzCwF,GC5KD,SAAkBxF,GACvB,MAAkB,WAAXA,EAAEkI,MAAmC,KAAdlI,EAAEmI,OAClC,CD0KoBC,CAASpI,IAAM2E,EAAMK,eAChB,MAAnBU,GAAmCA,EAAgB1F,GAC9CA,EAAEqI,kBACL9B,IAEJ,IAEIgB,IAAyBlM,EAAAA,EAAAA,UACzB+L,IAA2B/L,EAAAA,EAAAA,UAKjC,IAAK+K,EACH,OAAO,KAET,MAAMkC,GAAc3J,OAAOO,OAAO,CAChC/B,OACA/B,IAAKuJ,EAAMM,aAEX,aAAuB,WAAT9H,QAA2BW,GACxC0I,EAAM,CACPjB,QACAD,YACAjI,UAAW,IAEb,IAAIuH,GAASqB,EAAeA,EAAaqC,KAA4BnJ,EAAAA,EAAAA,KAAK,MAAOR,OAAOO,OAAO,CAAC,EAAGoJ,GAAa,CAC9G/G,SAAuBrD,EAAAA,aAAmBqD,EAAU,CAClDpE,KAAM,gBAGVyH,GAASX,EAAiBpB,EAAYqB,EAAe,CACnDqE,eAAe,EACfC,cAAc,EACdC,QAAQ,EACR9F,KAAM0C,EACNlE,SACAC,YACAC,SA7BmB,WACnB0B,IAAU,GACE,MAAZ1B,GAA4BA,KAASzF,UACvC,EA2BEoF,UACAC,aACAC,YACAK,SAAUqD,KAEZ,IAAI8D,GAAkB,KActB,OAbI7D,IACF6D,GAAkBxC,EAAe,CAC/B9K,IAAKuJ,EAAMO,eACX9H,QAAS4K,KAEXU,GAAkBzE,EAAiB0B,EAAoBC,EAAuB,CAC5EjD,KAAM0C,EACNoD,QAAQ,EACRD,cAAc,EACdD,eAAe,EACfhH,SAAUmH,OAGMvJ,EAAAA,EAAAA,KAAKwJ,EAAAA,SAAW,CAClCpH,SAAuBqH,EAAAA,cAAoCC,EAAAA,EAAAA,MAAMF,EAAAA,SAAW,CAC1EpH,SAAU,CAACmH,GAAiB9D,MAC1BwB,IACJ,IAEJjB,EAAM/F,YAAc,QACpB,QAAeT,OAAOO,OAAOiG,EAAO,CAClC2D,QAASrE,EAAAA,G,gDE5OJ,MAAMsE,GAAsBxJ,E,QAAAA,IAAS,cAgG5C,QA1FA,MACEyJ,WAAAA,GAIQ,IAJI,cACVnJ,EAAa,wBACboJ,GAA0B,EAAI,MAC9BC,GAAQ,GACTtN,UAAAiD,OAAA,QAAAf,IAAAlC,UAAA,GAAAA,UAAA,GAAG,CAAC,EACHuN,KAAKF,wBAA0BA,EAC/BE,KAAKD,MAAQA,EACbC,KAAKC,OAAS,GACdD,KAAKtJ,cAAgBA,CACvB,CACAwJ,iBAAAA,GACE,OClBW,WAAyD,IAA1BxJ,EAAajE,UAAAiD,OAAA,QAAAf,IAAAlC,UAAA,GAAAA,UAAA,GAAGK,SAC5D,MAAMwE,EAASZ,EAAcyJ,YAC7B,OAAOC,KAAKC,IAAI/I,EAAOgJ,WAAa5J,EAAc6J,gBAAgBC,YACpE,CDeWC,CAAsBT,KAAKtJ,cACpC,CACAgK,UAAAA,GACE,OAAQV,KAAKtJ,eAAiB5D,UAAUgE,IAC1C,CACA6J,kBAAAA,CAAmBC,GACjB,CAEFC,qBAAAA,CAAsBD,GACpB,CAEFE,iBAAAA,CAAkBC,GAChB,MAAM3E,EAAQ,CACZ4E,SAAU,UAKNC,EAAcjB,KAAKD,MAAQ,cAAgB,eAC3C9C,EAAY+C,KAAKU,aACvBK,EAAe3E,MAAQ,CACrB4E,SAAU/D,EAAUb,MAAM4E,SAC1B,CAACC,GAAchE,EAAUb,MAAM6E,IAE7BF,EAAeG,iBAGjB9E,EAAM6E,GAAe,GAAH3K,OAAM6K,UAASC,EAAAA,EAAAA,GAAInE,EAAWgE,IAAgB,IAAK,IAAMF,EAAeG,eAAc,OAE1GjE,EAAUoE,aAAazB,EAAqB,KAC5CwB,EAAAA,EAAAA,GAAInE,EAAWb,EACjB,CACAkF,KAAAA,GACE,IAAItB,KAAKC,QAAQsB,SAAQC,GAAKxB,KAAKpE,OAAO4F,IAC5C,CACAC,oBAAAA,CAAqBV,GACnB,MAAM9D,EAAY+C,KAAKU,aACvBzD,EAAUyE,gBAAgB9B,GAC1BpK,OAAOO,OAAOkH,EAAUb,MAAO2E,EAAe3E,MAChD,CACAT,GAAAA,CAAIH,GACF,IAAImG,EAAW3B,KAAKC,OAAOtK,QAAQ6F,GACnC,OAAkB,IAAdmG,EACKA,GAETA,EAAW3B,KAAKC,OAAOvK,OACvBsK,KAAKC,OAAO2B,KAAKpG,GACjBwE,KAAKW,mBAAmBnF,GACP,IAAbmG,IAGJ3B,KAAK6B,MAAQ,CACXX,eAAgBlB,KAAKE,oBACrB9D,MAAO,CAAC,GAEN4D,KAAKF,yBACPE,KAAKc,kBAAkBd,KAAK6B,QAPrBF,EAUX,CACA/F,MAAAA,CAAOJ,GACL,MAAMmG,EAAW3B,KAAKC,OAAOtK,QAAQ6F,IACnB,IAAdmG,IAGJ3B,KAAKC,OAAO6B,OAAOH,EAAU,IAIxB3B,KAAKC,OAAOvK,QAAUsK,KAAKF,yBAC9BE,KAAKyB,qBAAqBzB,KAAK6B,OAEjC7B,KAAKa,sBAAsBrF,GAC7B,CACAK,UAAAA,CAAWL,GACT,QAASwE,KAAKC,OAAOvK,QAAUsK,KAAKC,OAAOD,KAAKC,OAAOvK,OAAS,KAAO8F,CACzE,E,oEElEF,QA5BA,SAAuBxG,GAMpB,IANqB,SACtBoD,EACAoB,GAAIC,EAAM,SACVvB,EAAQ,aACRmH,EAAY,cACZD,GACDpK,EACC,MAAM/C,GAAMC,EAAAA,EAAAA,QAAO,MACb6P,GAAgB7P,EAAAA,EAAAA,QAAOuH,GACvBT,GAAe3G,EAAAA,EAAAA,GAAiB6F,IACtC/F,EAAAA,EAAAA,YAAU,KACJsH,EAAQsI,EAAc3P,SAAU,EAClC4G,EAAa/G,EAAIG,QACnB,GACC,CAACqH,EAAQT,IACZ,MAAM6B,GAActC,EAAAA,EAAAA,GAActG,EAAKmG,EAASnG,KAC1C+P,GAAqB5I,EAAAA,EAAAA,cAAahB,EAAU,CAChDnG,IAAK4I,IAEP,OAAIpB,EAAeuI,EACf5C,IAGC2C,EAAc3P,SAAWiN,EAFrB,KAKF2C,CACT,C,kCC9BA,IAAIC,EAAUC,SAASC,UAAUC,KAAKC,KAAKH,SAASC,UAAUE,KAAM,GAAGC,OAQxD,SAASC,EAAIpI,EAASqI,GACnC,OAAOP,EAAQ9H,EAAQsI,iBAAiBD,GAC1C,C,0GCVa,MAAAhP,EAAA,gEAgCb,EAvByCuB,EAAAA,YAAiB,CAAAC,EAOvD/C,KAAQ,IAPgD,WACzDyQ,EAAa,QAAO,aACpBC,EAAY,YACZC,GAAc,EAAK,OACnBxF,EAAM,SACNhF,GAEDpD,EADIG,GAAK0N,EAAAA,EAAAA,GAAA7N,EAAAxB,GAER,MAAMwD,GAAUS,EAAAA,EAAAA,YAAWqL,EAAAA,GACrBzO,GAAchC,EAAAA,EAAAA,IAAiB,KACxB,MAAX2E,GAA2BA,EAAQoG,SACzB,MAAVA,GAA0BA,GAAQ,IAEpC,OAAoBsC,EAAAA,EAAAA,MAAM,OAAKqD,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC7B9Q,IAAKA,GACFkD,GAAK,IACRiD,SAAU,CAACA,EAAUwK,IAA4B5M,EAAAA,EAAAA,KAAKgN,EAAAA,EAAa,CACjE,aAAcN,EACdO,QAASN,EACT1O,QAASI,OAEX,G,kEC9BJ,SAAS6O,EAAiBC,EAAWC,GACnC,OAAOD,EAAUE,QAAQ,IAAIC,OAAO,UAAYF,EAAgB,YAAa,KAAM,MAAMC,QAAQ,OAAQ,KAAKA,QAAQ,aAAc,GACtI,C,cCGA,MAAME,EACW,oDADXA,EAEY,cAFZA,EAGY,kBAElB,MAAMC,UAA8BlI,EAAAA,EAClCmI,cAAAA,CAAeC,EAAMvJ,EAASwJ,GAC5B,MAAMC,EAASzJ,EAAQiC,MAAMsH,GAG7BvJ,EAAQ0J,QAAQH,GAAQE,GACxBxC,EAAAA,EAAAA,GAAIjH,EAAS,CACX,CAACuJ,GAAO,GAAHpN,OAAMwN,YAAW1C,EAAAA,EAAAA,GAAIjH,EAASuJ,IAASC,EAAM,OAEtD,CACAI,OAAAA,CAAQL,EAAMvJ,GACZ,MAAMnI,EAAQmI,EAAQ0J,QAAQH,QAChB/O,IAAV3C,WACKmI,EAAQ0J,QAAQH,IACvBtC,EAAAA,EAAAA,GAAIjH,EAAS,CACX,CAACuJ,GAAO1R,IAGd,CACA8O,iBAAAA,CAAkBC,GAChBiD,MAAMlD,kBAAkBC,GACxB,MAAM9D,EAAY+C,KAAKU,aCvBZ,IAAkBvG,EAASgC,EDyBtC,GCzBsCA,EDwBlB,cCxBShC,EDwBpB8C,GCvBCgH,UAAW9J,EAAQ8J,UAAUtI,IAAIQ,GCHhC,SAAkBhC,EAASgC,GACxC,OAAIhC,EAAQ8J,YAAoB9H,GAAahC,EAAQ8J,UAAUlN,SAASoF,IACkC,KAAlG,KAAOhC,EAAQgC,UAAU+H,SAAW/J,EAAQgC,WAAa,KAAKxG,QAAQ,IAAMwG,EAAY,IAClG,CDAoEgI,CAAShK,EAASgC,KAA6C,kBAAtBhC,EAAQgC,UAAwBhC,EAAQgC,UAAYhC,EAAQgC,UAAY,IAAMA,EAAehC,EAAQkH,aAAa,SAAUlH,EAAQgC,WAAahC,EAAQgC,UAAU+H,SAAW,IAAM,IAAM/H,KDwB9R4E,EAAeG,eAAgB,OACpC,MAAMD,EAAcjB,KAAKD,MAAQ,cAAgB,eAC3CqE,EAAapE,KAAKD,MAAQ,aAAe,eAC/CwC,EAAAA,EAAAA,GAAItF,EAAWsG,GAAwBhC,SAAQ8C,GAAMrE,KAAKyD,eAAexC,EAAaoD,EAAItD,EAAeG,mBACzGqB,EAAAA,EAAAA,GAAItF,EAAWsG,GAAyBhC,SAAQ8C,GAAMrE,KAAKyD,eAAeW,EAAYC,GAAKtD,EAAeG,mBAC1GqB,EAAAA,EAAAA,GAAItF,EAAWsG,GAAyBhC,SAAQ8C,GAAMrE,KAAKyD,eAAeW,EAAYC,EAAItD,EAAeG,iBAC3G,CACAO,oBAAAA,CAAqBV,GACnBiD,MAAMvC,qBAAqBV,GAC3B,MAAM9D,EAAY+C,KAAKU,aD/BZ,IAAqBvG,EAASgC,ICgClB,cDhCShC,ECgCpB8C,GD/BFgH,UACV9J,EAAQ8J,UAAUrI,OAAOO,GACa,kBAAtBhC,EAAQgC,UACxBhC,EAAQgC,UAAY+G,EAAiB/I,EAAQgC,UAAWA,GAExDhC,EAAQkH,aAAa,QAAS6B,EAAiB/I,EAAQgC,WAAahC,EAAQgC,UAAU+H,SAAW,GAAI/H,IC2BrG,MAAM8E,EAAcjB,KAAKD,MAAQ,cAAgB,eAC3CqE,EAAapE,KAAKD,MAAQ,aAAe,eAC/CwC,EAAAA,EAAAA,GAAItF,EAAWsG,GAAwBhC,SAAQ8C,GAAMrE,KAAK+D,QAAQ9C,EAAaoD,MAC/E9B,EAAAA,EAAAA,GAAItF,EAAWsG,GAAyBhC,SAAQ8C,GAAMrE,KAAK+D,QAAQK,EAAYC,MAC/E9B,EAAAA,EAAAA,GAAItF,EAAWsG,GAAyBhC,SAAQ8C,GAAMrE,KAAK+D,QAAQK,EAAYC,IACjF,EAEF,IAAIC,EACG,SAASC,EAAiBhK,GAE/B,OADK+J,IAAeA,EAAgB,IAAId,EAAsBjJ,IACvD+J,CACT,CACA,S,mHGxDa,MAAA9Q,EAAA,mEAOPsB,EAAsBC,EAAAA,YAAiB,CAAAC,EAS1C/C,KAAQ,IATmC,GAC5CgD,EAAE,SACFuP,EAAQ,QACRvB,EAAU,UAAS,KACnBwB,EAAI,OACJ9N,GAAS,EAAK,SACd/C,GAAW,EAAK,UAChBuI,GAEDnH,EADIG,GAAK0N,EAAAA,EAAAA,GAAA7N,EAAAxB,GAER,MAAMkR,GAASC,EAAAA,EAAAA,IAAmBH,EAAU,QACrC3O,GAAa,QAClBlC,KACGF,EAAAA,EAAAA,KAAcsP,EAAAA,EAAAA,GAAC,CAClBpP,QAASsB,EACTrB,YACGuB,IAECW,EAAYnC,EAClB,OAAoBqC,EAAAA,EAAAA,KAAKF,GAASiN,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GAC7BlN,GACAV,GAAK,IACRlD,IAAKA,EACL2B,SAAUA,EACVuI,UAAWyI,IAAWzI,EAAWuI,EAAQ/N,GAAU,SAAUsM,GAAW,GAAJ3M,OAAOoO,EAAM,KAAApO,OAAI2M,GAAWwB,GAAQ,GAAJnO,OAAOoO,EAAM,KAAApO,OAAImO,GAAQtP,EAAMtB,MAAQD,GAAY,cACvJ,IAEJkB,EAAOmB,YAAc,SACrB,S,+JC/BM4O,EAAY,CAEhB,aAAcC,IAAAA,OAEd7Q,QAAS6Q,IAAAA,KAMT7B,QAAS6B,IAAAA,MAAgB,CAAC,WAEtB9B,EAA2BjO,EAAAA,YAAiB,CAAAC,EAK/C/C,KAAG,IAL6C,UACjDkK,EAAS,QACT8G,EACA,aAAc8B,EAAY,SAE3B/P,EADIG,GAAK0N,EAAAA,EAAAA,GAAA7N,EAAAxB,GAAA,OACcwC,EAAAA,EAAAA,KAAK,UAAQ+M,EAAAA,EAAAA,GAAA,CACnC9Q,IAAKA,EACLkC,KAAM,SACNgI,UAAWyI,IAAW,YAAa3B,GAAW,aAAJ3M,OAAiB2M,GAAW9G,GACtE,aAAc4I,GACX5P,GACH,IACF6N,EAAY/M,YAAc,cAC1B+M,EAAY6B,UAAYA,EACxB,S,sMCtBMG,EAAa,CACjB,CAACC,EAAAA,IAAW,OACZ,CAACC,EAAAA,IAAU,QAEPC,EAAoBpQ,EAAAA,YAAiB,CAAAC,EAMxC/C,KAAQ,IANiC,UAC1CkK,EAAS,SACT/D,EAAQ,kBACRgN,EAAoB,CAAC,EAAC,QACtBvN,GAED7C,EADIqI,GAAIwF,EAAAA,EAAAA,GAAA7N,EAAAxB,GAEP,MAAM2B,GAAK4N,EAAAA,EAAAA,GAAA,CACTvJ,IAAI,EACJ6L,QAAS,IACThG,cAAc,EACdD,eAAe,EACfE,QAAQ,GACLjC,GAEC1E,GAAcnG,EAAAA,EAAAA,cAAY,CAACyE,EAAMqO,MACrCC,EAAAA,EAAAA,GAAqBtO,GACV,MAAXY,GAA2BA,EAAQZ,EAAMqO,EAAY,GACpD,CAACzN,IACJ,OAAoB7B,EAAAA,EAAAA,KAAKwP,EAAAA,GAAiBzC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CACxC9Q,IAAKA,EACLkG,eAAgBsN,EAAAA,GACbtQ,GAAK,IACR0C,QAASc,EACT+M,SAAUtN,EAASnG,IACnBmG,SAAUA,CAACc,EAAQC,IAA4BpE,EAAAA,aAAmBqD,GAAQ2K,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACrE5J,GAAU,IACbgD,UAAWyI,IAAW,OAAQzI,EAAW/D,EAASjD,MAAMgH,UAAW6I,EAAW9L,GAASkM,EAAkBlM,SAE3G,IAEJiM,EAAKlP,YAAc,OACnB,S,kCCzCA,MAIA,E,QAJkClB,cAAoB,CAEpDqI,MAAAA,GAAU,G,uFCFZ,QAAgBjB,GAA0BpH,EAAAA,YAAiB,CAAC4Q,EAAG1T,KAAqB+D,EAAAA,EAAAA,KAAK,OAAK+M,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,GACzF4C,GAAC,IACJ1T,IAAKA,EACLkK,UAAWyI,IAAWe,EAAExJ,UAAWA,O","sources":["../node_modules/@restart/hooks/esm/useCommittedRef.js","../node_modules/@restart/hooks/esm/useEventCallback.js","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/useMounted.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/hooks/esm/useWillUnmount.js","../node_modules/@restart/hooks/esm/useUpdatedRef.js","../node_modules/@restart/ui/esm/Button.js","../node_modules/@restart/ui/esm/DataKey.js","../node_modules/dom-helpers/esm/activeElement.js","../node_modules/dom-helpers/esm/contains.js","../node_modules/@restart/ui/esm/useWindow.js","../node_modules/@restart/ui/esm/useWaitForDOMRef.js","../node_modules/@restart/ui/esm/useRTGTransitionProps.js","../node_modules/@restart/ui/esm/RTGTransition.js","../node_modules/@restart/ui/esm/ImperativeTransition.js","../node_modules/@restart/ui/esm/Modal.js","../node_modules/@restart/ui/esm/utils.js","../node_modules/@restart/ui/esm/ModalManager.js","../node_modules/@restart/ui/esm/getScrollbarWidth.js","../node_modules/@restart/ui/esm/NoopTransition.js","../node_modules/dom-helpers/esm/querySelectorAll.js","../node_modules/react-bootstrap/esm/AbstractModalHeader.js","../node_modules/dom-helpers/esm/removeClass.js","../node_modules/react-bootstrap/esm/BootstrapModalManager.js","../node_modules/dom-helpers/esm/addClass.js","../node_modules/dom-helpers/esm/hasClass.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/CloseButton.js","../node_modules/react-bootstrap/esm/Fade.js","../node_modules/react-bootstrap/esm/ModalContext.js","../node_modules/react-bootstrap/esm/divWithClassName.js"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\n/**\n * Creates a `Ref` whose value is updated in an effect, ensuring the most recent\n * value is the one rendered with. Generally only required for Concurrent mode usage\n * where previous work in `render()` may be discarded before being used.\n *\n * This is safe to access in an event handler.\n *\n * @param value The `Ref` value\n */\nfunction useCommittedRef(value) {\n  const ref = useRef(value);\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n  return ref;\n}\nexport default useCommittedRef;","import { useCallback } from 'react';\nimport useCommittedRef from './useCommittedRef';\nexport default function useEventCallback(fn) {\n  const ref = useCommittedRef(fn);\n  return useCallback(function (...args) {\n    return ref.current && ref.current(...args);\n  }, [ref]);\n}","import { useEffect, useLayoutEffect } from 'react';\nconst isReactNative = typeof global !== 'undefined' &&\n// @ts-ignore\nglobal.navigator &&\n// @ts-ignore\nglobal.navigator.product === 'ReactNative';\nconst isDOM = typeof document !== 'undefined';\n\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useRef, useEffect } from 'react';\n\n/**\n * Track whether a component is current mounted. Generally less preferable than\n * properlly canceling effects so they don't run after a component is unmounted,\n * but helpful in cases where that isn't feasible, such as a `Promise` resolution.\n *\n * @returns a function that returns the current isMounted state of the component\n *\n * ```ts\n * const [data, setData] = useState(null)\n * const isMounted = useMounted()\n *\n * useEffect(() => {\n *   fetchdata().then((newData) => {\n *      if (isMounted()) {\n *        setData(newData);\n *      }\n *   })\n * })\n * ```\n */\nexport default function useMounted() {\n  const mounted = useRef(true);\n  const isMounted = useRef(() => mounted.current);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return isMounted.current;\n}","import { useEffect, useRef } from 'react';\n\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\nexport default function usePrevious(value) {\n  const ref = useRef(null);\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}","import useUpdatedRef from './useUpdatedRef';\nimport { useEffect } from 'react';\n\n/**\n * Attach a callback that fires when a component unmounts\n *\n * @param fn Handler to run when the component unmounts\n * @category effects\n */\nexport default function useWillUnmount(fn) {\n  const onUnmount = useUpdatedRef(fn);\n  useEffect(() => () => onUnmount.current(), []);\n}","import { useRef } from 'react';\n\n/**\n * Returns a ref that is immediately updated with the new value\n *\n * @param value The Ref value\n * @category refs\n */\nexport default function useUpdatedRef(value) {\n  const valueRef = useRef(value);\n  valueRef.current = value;\n  return valueRef;\n}","const _excluded = [\"as\", \"disabled\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\nexport function useButtonProps({\n  tagName,\n  disabled,\n  href,\n  target,\n  rel,\n  role,\n  onClick,\n  tabIndex = 0,\n  type\n}) {\n  if (!tagName) {\n    if (href != null || target != null || rel != null) {\n      tagName = 'a';\n    } else {\n      tagName = 'button';\n    }\n  }\n  const meta = {\n    tagName\n  };\n  if (tagName === 'button') {\n    return [{\n      type: type || 'button',\n      disabled\n    }, meta];\n  }\n  const handleClick = event => {\n    if (disabled || tagName === 'a' && isTrivialHref(href)) {\n      event.preventDefault();\n    }\n    if (disabled) {\n      event.stopPropagation();\n      return;\n    }\n    onClick == null ? void 0 : onClick(event);\n  };\n  const handleKeyDown = event => {\n    if (event.key === ' ') {\n      event.preventDefault();\n      handleClick(event);\n    }\n  };\n  if (tagName === 'a') {\n    // Ensure there's a href so Enter can trigger anchor button.\n    href || (href = '#');\n    if (disabled) {\n      href = undefined;\n    }\n  }\n  return [{\n    role: role != null ? role : 'button',\n    // explicitly undefined so that it overrides the props disabled in a spread\n    // e.g. <Tag {...props} {...hookProps} />\n    disabled: undefined,\n    tabIndex: disabled ? undefined : tabIndex,\n    href,\n    target: tagName === 'a' ? target : undefined,\n    'aria-disabled': !disabled ? undefined : disabled,\n    rel: tagName === 'a' ? rel : undefined,\n    onClick: handleClick,\n    onKeyDown: handleKeyDown\n  }, meta];\n}\nconst Button = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      as: asProp,\n      disabled\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps, {\n    tagName: Component\n  }] = useButtonProps(Object.assign({\n    tagName: asProp,\n    disabled\n  }, props));\n  return /*#__PURE__*/_jsx(Component, Object.assign({}, props, buttonProps, {\n    ref: ref\n  }));\n});\nButton.displayName = 'Button';\nexport default Button;","export const ATTRIBUTE_PREFIX = `data-rr-ui-`;\nexport const PROPERTY_PREFIX = `rrUi`;\nexport function dataAttr(property) {\n  return `${ATTRIBUTE_PREFIX}${property}`;\n}\nexport function dataProp(property) {\n  return `${PROPERTY_PREFIX}${property}`;\n}","import ownerDocument from './ownerDocument';\n/**\n * Returns the actively focused element safely.\n *\n * @param doc the document to check\n */\n\nexport default function activeElement(doc) {\n  if (doc === void 0) {\n    doc = ownerDocument();\n  }\n\n  // Support: IE 9 only\n  // IE9 throws an \"Unspecified error\" accessing document.activeElement from an <iframe>\n  try {\n    var active = doc.activeElement; // IE11 returns a seemingly empty object in some cases when accessing\n    // document.activeElement from an <iframe>\n\n    if (!active || !active.nodeName) return null;\n    return active;\n  } catch (e) {\n    /* ie throws if no active element */\n    return doc.body;\n  }\n}","/* eslint-disable no-bitwise, no-cond-assign */\n\n/**\n * Checks if an element contains another given element.\n * \n * @param context the context element\n * @param node the element to check\n */\nexport default function contains(context, node) {\n  // HTML DOM and SVG DOM may have different support levels,\n  // so we need to check on context instead of a document root element.\n  if (context.contains) return context.contains(node);\n  if (context.compareDocumentPosition) return context === node || !!(context.compareDocumentPosition(node) & 16);\n}","import { createContext, useContext } from 'react';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nconst Context = /*#__PURE__*/createContext(canUseDOM ? window : undefined);\nexport const WindowProvider = Context.Provider;\n\n/**\n * The document \"window\" placed in React context. Helpful for determining\n * SSR context, or when rendering into an iframe.\n *\n * @returns the current window\n */\nexport default function useWindow() {\n  return useContext(Context);\n}","import ownerDocument from 'dom-helpers/ownerDocument';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport { useState, useEffect } from 'react';\nimport useWindow from './useWindow';\nexport const resolveContainerRef = (ref, document) => {\n  if (!canUseDOM) return null;\n  if (ref == null) return (document || ownerDocument()).body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if (ref && ('nodeType' in ref || ref.getBoundingClientRect)) return ref;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  const window = useWindow();\n  const [resolvedRef, setRef] = useState(() => resolveContainerRef(ref, window == null ? void 0 : window.document));\n  if (!resolvedRef) {\n    const earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n  useEffect(() => {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(() => {\n    const nextRef = resolveContainerRef(ref);\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","const _excluded = [\"onEnter\", \"onEntering\", \"onEntered\", \"onExit\", \"onExiting\", \"onExited\", \"addEndListener\", \"children\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport { cloneElement, useCallback, useRef } from 'react';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\n/**\n * Normalizes RTG transition callbacks with nodeRef to better support\n * strict mode.\n *\n * @param props Transition props.\n * @returns Normalized transition props.\n */\nexport default function useRTGTransitionProps(_ref) {\n  let {\n      onEnter,\n      onEntering,\n      onEntered,\n      onExit,\n      onExiting,\n      onExited,\n      addEndListener,\n      children\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const nodeRef = useRef(null);\n  const mergedRef = useMergedRefs(nodeRef, typeof children === 'function' ? null : children.ref);\n  const normalize = callback => param => {\n    if (callback && nodeRef.current) {\n      callback(nodeRef.current, param);\n    }\n  };\n\n  /* eslint-disable react-hooks/exhaustive-deps */\n  const handleEnter = useCallback(normalize(onEnter), [onEnter]);\n  const handleEntering = useCallback(normalize(onEntering), [onEntering]);\n  const handleEntered = useCallback(normalize(onEntered), [onEntered]);\n  const handleExit = useCallback(normalize(onExit), [onExit]);\n  const handleExiting = useCallback(normalize(onExiting), [onExiting]);\n  const handleExited = useCallback(normalize(onExited), [onExited]);\n  const handleAddEndListener = useCallback(normalize(addEndListener), [addEndListener]);\n  /* eslint-enable react-hooks/exhaustive-deps */\n\n  return Object.assign({}, props, {\n    nodeRef\n  }, onEnter && {\n    onEnter: handleEnter\n  }, onEntering && {\n    onEntering: handleEntering\n  }, onEntered && {\n    onEntered: handleEntered\n  }, onExit && {\n    onExit: handleExit\n  }, onExiting && {\n    onExiting: handleExiting\n  }, onExited && {\n    onExited: handleExited\n  }, addEndListener && {\n    addEndListener: handleAddEndListener\n  }, {\n    children: typeof children === 'function' ? (status, innerProps) =>\n    // TODO: Types for RTG missing innerProps, so need to cast.\n    children(status, Object.assign({}, innerProps, {\n      ref: mergedRef\n    })) : /*#__PURE__*/cloneElement(children, {\n      ref: mergedRef\n    })\n  });\n}","const _excluded = [\"component\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\nimport * as React from 'react';\nimport useRTGTransitionProps from './useRTGTransitionProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n// Normalizes Transition callbacks when nodeRef is used.\nconst RTGTransition = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      component: Component\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const transitionProps = useRTGTransitionProps(props);\n  return /*#__PURE__*/_jsx(Component, Object.assign({\n    ref: ref\n  }, transitionProps));\n});\nexport default RTGTransition;","import useMergedRefs from '@restart/hooks/useMergedRefs';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport useIsomorphicEffect from '@restart/hooks/useIsomorphicEffect';\nimport React, { useRef, cloneElement, useState } from 'react';\nimport NoopTransition from './NoopTransition';\nimport RTGTransition from './RTGTransition';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function useTransition({\n  in: inProp,\n  onTransition\n}) {\n  const ref = useRef(null);\n  const isInitialRef = useRef(true);\n  const handleTransition = useEventCallback(onTransition);\n  useIsomorphicEffect(() => {\n    if (!ref.current) {\n      return undefined;\n    }\n    let stale = false;\n    handleTransition({\n      in: inProp,\n      element: ref.current,\n      initial: isInitialRef.current,\n      isStale: () => stale\n    });\n    return () => {\n      stale = true;\n    };\n  }, [inProp, handleTransition]);\n  useIsomorphicEffect(() => {\n    isInitialRef.current = false;\n    // this is for strict mode\n    return () => {\n      isInitialRef.current = true;\n    };\n  }, []);\n  return ref;\n}\n/**\n * Adapts an imperative transition function to a subset of the RTG `<Transition>` component API.\n *\n * ImperativeTransition does not support mounting options or `appear` at the moment, meaning\n * that it always acts like: `mountOnEnter={true} unmountOnExit={true} appear={true}`\n */\nexport default function ImperativeTransition({\n  children,\n  in: inProp,\n  onExited,\n  onEntered,\n  transition\n}) {\n  const [exited, setExited] = useState(!inProp);\n\n  // TODO: I think this needs to be in an effect\n  if (inProp && exited) {\n    setExited(false);\n  }\n  const ref = useTransition({\n    in: !!inProp,\n    onTransition: options => {\n      const onFinish = () => {\n        if (options.isStale()) return;\n        if (options.in) {\n          onEntered == null ? void 0 : onEntered(options.element, options.initial);\n        } else {\n          setExited(true);\n          onExited == null ? void 0 : onExited(options.element);\n        }\n      };\n      Promise.resolve(transition(options)).then(onFinish, error => {\n        if (!options.in) setExited(true);\n        throw error;\n      });\n    }\n  });\n  const combinedRef = useMergedRefs(ref, children.ref);\n  return exited && !inProp ? null : /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n}\nexport function renderTransition(component, runTransition, props) {\n  if (component) {\n    return /*#__PURE__*/_jsx(RTGTransition, Object.assign({}, props, {\n      component: component\n    }));\n  }\n  if (runTransition) {\n    return /*#__PURE__*/_jsx(ImperativeTransition, Object.assign({}, props, {\n      transition: runTransition\n    }));\n  }\n  return /*#__PURE__*/_jsx(NoopTransition, Object.assign({}, props));\n}","const _excluded = [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"runTransition\", \"backdropTransition\", \"runBackdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable @typescript-eslint/no-use-before-define, react/prop-types */\n\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nimport useWindow from './useWindow';\nimport { renderTransition } from './ImperativeTransition';\nimport { isEscKey } from './utils';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nlet manager;\nfunction getManager(window) {\n  if (!manager) manager = new ModalManager({\n    ownerDocument: window == null ? void 0 : window.document\n  });\n  return manager;\n}\nfunction useModalManager(provided) {\n  const window = useWindow();\n  const modalManager = provided || getManager(window);\n  const modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: () => modalManager.add(modal.current),\n    remove: () => modalManager.remove(modal.current),\n    isTopModal: () => modalManager.isTopModal(modal.current),\n    setDialogRef: useCallback(ref => {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(ref => {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\nconst Modal = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      show = false,\n      role = 'dialog',\n      className,\n      style,\n      children,\n      backdrop = true,\n      keyboard = true,\n      onBackdropClick,\n      onEscapeKeyDown,\n      transition,\n      runTransition,\n      backdropTransition,\n      runBackdropTransition,\n      autoFocus = true,\n      enforceFocus = true,\n      restoreFocus = true,\n      restoreFocusOptions,\n      renderDialog,\n      renderBackdrop = props => /*#__PURE__*/_jsx(\"div\", Object.assign({}, props)),\n      manager: providedManager,\n      container: containerRef,\n      onShow,\n      onHide = () => {},\n      onExit,\n      onExited,\n      onExiting,\n      onEnter,\n      onEntering,\n      onEntered\n    } = _ref,\n    rest = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const ownerWindow = useWindow();\n  const container = useWaitForDOMRef(containerRef);\n  const modal = useModalManager(providedManager);\n  const isMounted = useMounted();\n  const prevShow = usePrevious(show);\n  const [exited, setExited] = useState(!show);\n  const lastFocusRef = useRef(null);\n  useImperativeHandle(ref, () => modal, [modal]);\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n  }\n\n  // TODO: I think this needs to be in an effect\n  if (show && exited) {\n    setExited(false);\n  }\n  const handleShow = useEventCallback(() => {\n    modal.add();\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus',\n    // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    () => setTimeout(handleEnforceFocus), true);\n    if (onShow) {\n      onShow();\n    }\n\n    // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n    if (autoFocus) {\n      var _modal$dialog$ownerDo, _modal$dialog;\n      const currentActiveElement = activeElement((_modal$dialog$ownerDo = (_modal$dialog = modal.dialog) == null ? void 0 : _modal$dialog.ownerDocument) != null ? _modal$dialog$ownerDo : ownerWindow == null ? void 0 : ownerWindow.document);\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  const handleHide = useEventCallback(() => {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  });\n\n  // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n  useEffect(() => {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container, /* should never change: */handleShow]);\n\n  // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n  useEffect(() => {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(() => {\n    handleHide();\n  });\n\n  // --------------------------------\n\n  const handleEnforceFocus = useEventCallback(() => {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n    const currentActiveElement = activeElement(ownerWindow == null ? void 0 : ownerWindow.document);\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  const handleBackdropClick = useEventCallback(e => {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n  const handleDocumentKeyDown = useEventCallback(e => {\n    if (keyboard && isEscKey(e) && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      if (!e.defaultPrevented) {\n        onHide();\n      }\n    }\n  });\n  const removeFocusListenerRef = useRef();\n  const removeKeydownListenerRef = useRef();\n  const handleHidden = (...args) => {\n    setExited(true);\n    onExited == null ? void 0 : onExited(...args);\n  };\n  if (!container) {\n    return null;\n  }\n  const dialogProps = Object.assign({\n    role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style,\n    className,\n    tabIndex: -1\n  });\n  let dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/_jsx(\"div\", Object.assign({}, dialogProps, {\n    children: /*#__PURE__*/React.cloneElement(children, {\n      role: 'document'\n    })\n  }));\n  dialog = renderTransition(transition, runTransition, {\n    unmountOnExit: true,\n    mountOnEnter: true,\n    appear: true,\n    in: !!show,\n    onExit,\n    onExiting,\n    onExited: handleHidden,\n    onEnter,\n    onEntering,\n    onEntered,\n    children: dialog\n  });\n  let backdropElement = null;\n  if (backdrop) {\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n    backdropElement = renderTransition(backdropTransition, runBackdropTransition, {\n      in: !!show,\n      appear: true,\n      mountOnEnter: true,\n      unmountOnExit: true,\n      children: backdropElement\n    });\n  }\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/ReactDOM.createPortal( /*#__PURE__*/_jsxs(_Fragment, {\n      children: [backdropElement, dialog]\n    }), container)\n  });\n});\nModal.displayName = 'Modal';\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","/* eslint-disable import/prefer-default-export */\nexport function isEscKey(e) {\n  return e.code === 'Escape' || e.keyCode === 27;\n}","import css from 'dom-helpers/css';\nimport { dataAttr } from './DataKey';\nimport getBodyScrollbarWidth from './getScrollbarWidth';\nexport const OPEN_DATA_ATTRIBUTE = dataAttr('modal-open');\n\n/**\n * Manages a stack of Modals as well as ensuring\n * body scrolling is is disabled and padding accounted for\n */\nclass ModalManager {\n  constructor({\n    ownerDocument,\n    handleContainerOverflow = true,\n    isRTL = false\n  } = {}) {\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.isRTL = isRTL;\n    this.modals = [];\n    this.ownerDocument = ownerDocument;\n  }\n  getScrollbarWidth() {\n    return getBodyScrollbarWidth(this.ownerDocument);\n  }\n  getElement() {\n    return (this.ownerDocument || document).body;\n  }\n  setModalAttributes(_modal) {\n    // For overriding\n  }\n  removeModalAttributes(_modal) {\n    // For overriding\n  }\n  setContainerStyle(containerState) {\n    const style = {\n      overflow: 'hidden'\n    };\n\n    // we are only interested in the actual `style` here\n    // because we will override it\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const container = this.getElement();\n    containerState.style = {\n      overflow: container.style.overflow,\n      [paddingProp]: container.style[paddingProp]\n    };\n    if (containerState.scrollBarWidth) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style[paddingProp] = `${parseInt(css(container, paddingProp) || '0', 10) + containerState.scrollBarWidth}px`;\n    }\n    container.setAttribute(OPEN_DATA_ATTRIBUTE, '');\n    css(container, style);\n  }\n  reset() {\n    [...this.modals].forEach(m => this.remove(m));\n  }\n  removeContainerStyle(containerState) {\n    const container = this.getElement();\n    container.removeAttribute(OPEN_DATA_ATTRIBUTE);\n    Object.assign(container.style, containerState.style);\n  }\n  add(modal) {\n    let modalIdx = this.modals.indexOf(modal);\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n    this.setModalAttributes(modal);\n    if (modalIdx !== 0) {\n      return modalIdx;\n    }\n    this.state = {\n      scrollBarWidth: this.getScrollbarWidth(),\n      style: {}\n    };\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(this.state);\n    }\n    return modalIdx;\n  }\n  remove(modal) {\n    const modalIdx = this.modals.indexOf(modal);\n    if (modalIdx === -1) {\n      return;\n    }\n    this.modals.splice(modalIdx, 1);\n\n    // if that was the last modal in a container,\n    // clean up the container\n    if (!this.modals.length && this.handleContainerOverflow) {\n      this.removeContainerStyle(this.state);\n    }\n    this.removeModalAttributes(modal);\n  }\n  isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  }\n}\nexport default ModalManager;","/**\n * Get the width of the vertical window scrollbar if it's visible\n */\nexport default function getBodyScrollbarWidth(ownerDocument = document) {\n  const window = ownerDocument.defaultView;\n  return Math.abs(window.innerWidth - ownerDocument.documentElement.clientWidth);\n}","import useEventCallback from '@restart/hooks/useEventCallback';\nimport useMergedRefs from '@restart/hooks/useMergedRefs';\nimport { cloneElement, useEffect, useRef } from 'react';\nfunction NoopTransition({\n  children,\n  in: inProp,\n  onExited,\n  mountOnEnter,\n  unmountOnExit\n}) {\n  const ref = useRef(null);\n  const hasEnteredRef = useRef(inProp);\n  const handleExited = useEventCallback(onExited);\n  useEffect(() => {\n    if (inProp) hasEnteredRef.current = true;else {\n      handleExited(ref.current);\n    }\n  }, [inProp, handleExited]);\n  const combinedRef = useMergedRefs(ref, children.ref);\n  const child = /*#__PURE__*/cloneElement(children, {\n    ref: combinedRef\n  });\n  if (inProp) return child;\n  if (unmountOnExit) {\n    return null;\n  }\n  if (!hasEnteredRef.current && mountOnEnter) {\n    return null;\n  }\n  return child;\n}\nexport default NoopTransition;","var toArray = Function.prototype.bind.call(Function.prototype.call, [].slice);\n/**\n * Runs `querySelectorAll` on a given element.\n * \n * @param element the element\n * @param selector the selector\n */\n\nexport default function qsa(element, selector) {\n  return toArray(element.querySelectorAll(selector));\n}","\"use client\";\n\nimport * as React from 'react';\nimport { useContext } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport CloseButton from './CloseButton';\nimport ModalContext from './ModalContext';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst AbstractModalHeader = /*#__PURE__*/React.forwardRef(({\n  closeLabel = 'Close',\n  closeVariant,\n  closeButton = false,\n  onHide,\n  children,\n  ...props\n}, ref) => {\n  const context = useContext(ModalContext);\n  const handleClick = useEventCallback(() => {\n    context == null ? void 0 : context.onHide();\n    onHide == null ? void 0 : onHide();\n  });\n  return /*#__PURE__*/_jsxs(\"div\", {\n    ref: ref,\n    ...props,\n    children: [children, closeButton && /*#__PURE__*/_jsx(CloseButton, {\n      \"aria-label\": closeLabel,\n      variant: closeVariant,\n      onClick: handleClick\n    })]\n  });\n});\nexport default AbstractModalHeader;","function replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp(\"(^|\\\\s)\" + classToRemove + \"(?:\\\\s|$)\", 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n/**\n * Removes a CSS class from a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\n\nexport default function removeClass(element, className) {\n  if (element.classList) {\n    element.classList.remove(className);\n  } else if (typeof element.className === 'string') {\n    element.className = replaceClassName(element.className, className);\n  } else {\n    element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n  }\n}","import addClass from 'dom-helpers/addClass';\nimport css from 'dom-helpers/css';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport removeClass from 'dom-helpers/removeClass';\nimport ModalManager from '@restart/ui/ModalManager';\nconst Selector = {\n  FIXED_CONTENT: '.fixed-top, .fixed-bottom, .is-fixed, .sticky-top',\n  STICKY_CONTENT: '.sticky-top',\n  NAVBAR_TOGGLER: '.navbar-toggler'\n};\nclass BootstrapModalManager extends ModalManager {\n  adjustAndStore(prop, element, adjust) {\n    const actual = element.style[prop];\n    // TODO: DOMStringMap and CSSStyleDeclaration aren't strictly compatible\n    // @ts-ignore\n    element.dataset[prop] = actual;\n    css(element, {\n      [prop]: `${parseFloat(css(element, prop)) + adjust}px`\n    });\n  }\n  restore(prop, element) {\n    const value = element.dataset[prop];\n    if (value !== undefined) {\n      delete element.dataset[prop];\n      css(element, {\n        [prop]: value\n      });\n    }\n  }\n  setContainerStyle(containerState) {\n    super.setContainerStyle(containerState);\n    const container = this.getElement();\n    addClass(container, 'modal-open');\n    if (!containerState.scrollBarWidth) return;\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.adjustAndStore(paddingProp, el, containerState.scrollBarWidth));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.adjustAndStore(marginProp, el, -containerState.scrollBarWidth));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.adjustAndStore(marginProp, el, containerState.scrollBarWidth));\n  }\n  removeContainerStyle(containerState) {\n    super.removeContainerStyle(containerState);\n    const container = this.getElement();\n    removeClass(container, 'modal-open');\n    const paddingProp = this.isRTL ? 'paddingLeft' : 'paddingRight';\n    const marginProp = this.isRTL ? 'marginLeft' : 'marginRight';\n    qsa(container, Selector.FIXED_CONTENT).forEach(el => this.restore(paddingProp, el));\n    qsa(container, Selector.STICKY_CONTENT).forEach(el => this.restore(marginProp, el));\n    qsa(container, Selector.NAVBAR_TOGGLER).forEach(el => this.restore(marginProp, el));\n  }\n}\nlet sharedManager;\nexport function getSharedManager(options) {\n  if (!sharedManager) sharedManager = new BootstrapModalManager(options);\n  return sharedManager;\n}\nexport default BootstrapModalManager;","import hasClass from './hasClass';\n/**\n * Adds a CSS class to a given element.\n * \n * @param element the element\n * @param className the CSS class name\n */\n\nexport default function addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!hasClass(element, className)) if (typeof element.className === 'string') element.className = element.className + \" \" + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + \" \" + className);\n}","/**\n * Checks if a given element has a CSS class.\n * \n * @param element the element\n * @param className the CSS class name\n */\nexport default function hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);\n  return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst propTypes = {\n  /** An accessible label indicating the relevant information about the Close Button. */\n  'aria-label': PropTypes.string,\n  /** A callback fired after the Close Button is clicked. */\n  onClick: PropTypes.func,\n  /**\n   * Render different color variant for the button.\n   *\n   * Omitting this will render the default dark color.\n   */\n  variant: PropTypes.oneOf(['white'])\n};\nconst CloseButton = /*#__PURE__*/React.forwardRef(({\n  className,\n  variant,\n  'aria-label': ariaLabel = 'Close',\n  ...props\n}, ref) => /*#__PURE__*/_jsx(\"button\", {\n  ref: ref,\n  type: \"button\",\n  className: classNames('btn-close', variant && `btn-close-${variant}`, className),\n  \"aria-label\": ariaLabel,\n  ...props\n}));\nCloseButton.displayName = 'CloseButton';\nCloseButton.propTypes = propTypes;\nexport default CloseButton;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport { ENTERED, ENTERING } from 'react-transition-group/Transition';\nimport transitionEndListener from './transitionEndListener';\nimport triggerBrowserReflow from './triggerBrowserReflow';\nimport TransitionWrapper from './TransitionWrapper';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst fadeStyles = {\n  [ENTERING]: 'show',\n  [ENTERED]: 'show'\n};\nconst Fade = /*#__PURE__*/React.forwardRef(({\n  className,\n  children,\n  transitionClasses = {},\n  onEnter,\n  ...rest\n}, ref) => {\n  const props = {\n    in: false,\n    timeout: 300,\n    mountOnEnter: false,\n    unmountOnExit: false,\n    appear: false,\n    ...rest\n  };\n  const handleEnter = useCallback((node, isAppearing) => {\n    triggerBrowserReflow(node);\n    onEnter == null ? void 0 : onEnter(node, isAppearing);\n  }, [onEnter]);\n  return /*#__PURE__*/_jsx(TransitionWrapper, {\n    ref: ref,\n    addEndListener: transitionEndListener,\n    ...props,\n    onEnter: handleEnter,\n    childRef: children.ref,\n    children: (status, innerProps) => /*#__PURE__*/React.cloneElement(children, {\n      ...innerProps,\n      className: classNames('fade', className, children.props.className, fadeStyles[status], transitionClasses[status])\n    })\n  });\n});\nFade.displayName = 'Fade';\nexport default Fade;","\"use client\";\n\nimport * as React from 'react';\nconst ModalContext = /*#__PURE__*/React.createContext({\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  onHide() {}\n});\nexport default ModalContext;","import * as React from 'react';\nimport classNames from 'classnames';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default (className => /*#__PURE__*/React.forwardRef((p, ref) => /*#__PURE__*/_jsx(\"div\", {\n  ...p,\n  ref: ref,\n  className: classNames(p.className, className)\n})));"],"names":["value","ref","useRef","useEffect","current","useEventCallback","fn","useCommittedRef","useCallback","arguments","isReactNative","global","navigator","product","document","useLayoutEffect","useMounted","mounted","isMounted","usePrevious","useWillUnmount","onUnmount","valueRef","useUpdatedRef","_excluded","useButtonProps","_ref2","tagName","disabled","href","target","rel","role","onClick","tabIndex","type","meta","handleClick","event","trim","isTrivialHref","preventDefault","stopPropagation","undefined","onKeyDown","key","Button","React","_ref","as","asProp","props","source","excluded","i","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","Component","assign","_jsx","displayName","ATTRIBUTE_PREFIX","PROPERTY_PREFIX","dataAttr","property","concat","dataProp","activeElement","doc","ownerDocument","active","nodeName","e","body","contains","context","node","compareDocumentPosition","Context","createContext","canUseDOM","window","Provider","useWindow","useContext","resolveContainerRef","getBoundingClientRect","useRTGTransitionProps","onEnter","onEntering","onEntered","onExit","onExiting","onExited","addEndListener","children","nodeRef","mergedRef","useMergedRefs","normalize","callback","param","handleEnter","handleEntering","handleEntered","handleExit","handleExiting","handleExited","handleAddEndListener","status","innerProps","cloneElement","component","transitionProps","ImperativeTransition","in","inProp","transition","exited","setExited","useState","onTransition","isInitialRef","handleTransition","useIsomorphicEffect","stale","element","initial","isStale","useTransition","options","Promise","resolve","then","onFinish","error","combinedRef","renderTransition","runTransition","RTGTransition","NoopTransition","manager","useModalManager","provided","modalManager","ModalManager","getManager","modal","dialog","backdrop","add","remove","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","show","className","style","keyboard","onBackdropClick","onEscapeKeyDown","backdropTransition","runBackdropTransition","autoFocus","enforceFocus","restoreFocus","restoreFocusOptions","renderDialog","renderBackdrop","providedManager","container","containerRef","onShow","onHide","rest","ownerWindow","onResolved","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","prevShow","lastFocusRef","useImperativeHandle","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","_modal$dialog$ownerDo","_modal$dialog","currentActiveElement","focus","handleHide","_lastFocusRef$current","handleBackdropClick","currentTarget","code","keyCode","isEscKey","defaultPrevented","dialogProps","unmountOnExit","mountOnEnter","appear","backdropElement","_Fragment","ReactDOM","_jsxs","Manager","OPEN_DATA_ATTRIBUTE","constructor","handleContainerOverflow","isRTL","this","modals","getScrollbarWidth","defaultView","Math","abs","innerWidth","documentElement","clientWidth","getBodyScrollbarWidth","getElement","setModalAttributes","_modal","removeModalAttributes","setContainerStyle","containerState","overflow","paddingProp","scrollBarWidth","parseInt","css","setAttribute","reset","forEach","m","removeContainerStyle","removeAttribute","modalIdx","push","state","splice","hasEnteredRef","child","toArray","Function","prototype","bind","call","slice","qsa","selector","querySelectorAll","closeLabel","closeVariant","closeButton","_objectWithoutProperties","ModalContext","_objectSpread","CloseButton","variant","replaceClassName","origClass","classToRemove","replace","RegExp","Selector","BootstrapModalManager","adjustAndStore","prop","adjust","actual","dataset","parseFloat","restore","super","classList","baseVal","hasClass","marginProp","el","sharedManager","getSharedManager","bsPrefix","size","prefix","useBootstrapPrefix","classNames","propTypes","PropTypes","ariaLabel","fadeStyles","ENTERING","ENTERED","Fade","transitionClasses","timeout","isAppearing","triggerBrowserReflow","TransitionWrapper","transitionEndListener","childRef","p"],"sourceRoot":""}